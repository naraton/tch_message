plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    compileSdk = 34 // ใช้เวอร์ชันล่าสุด
    namespace "com.example.tch_message" // กำหนด namespace

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    defaultConfig {
        applicationId "com.example.tch_message"
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        multiDexEnabled true // รองรับ MultiDex
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug // ใช้คีย์ debug ชั่วคราว
            minifyEnabled true  // ปิด minify ถ้าไม่ได้ใช้ Proguard
            shrinkResources true // ✅ เปิดใช้งานเพื่อลบ resource ที่ไม่ได้ใช้
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE-FILE'
    }

    buildFeatures {
        viewBinding true // เปิดใช้ View Binding (ถ้าต้องการ)
    }
}

flutter {
    source = "../.."
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4' // อัปเดตเป็นเวอร์ชันล่าสุด
    implementation 'androidx.multidex:multidex:2.0.1' // รองรับ MultiDex
}

apply plugin: 'com.google.gms.google-services'
